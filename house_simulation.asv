function [temperature, energy_consumption, on_time, outside_temp] = house_simulation(set_temp_range, initial_house_temp)
    global k_to_c hours_to_seconds effective_off_temp ideal_temp freezing_temp;
    
    
    % house paramters
`
    
    %initial conditions
    current_house_temp = initial_house_temp;
    U_0 = temperatureToEnergy(current_house_temp, tot_mass, c_weighted);
    heater_state_0 = false; % heater initially on
    

    
    
    
    %setup for Eulers method
    dt = set_temp_range(1,2) - set_temp_range(1,1);
 
    %make empty array
    energy = zeros(1, length(set_temp_range(1,:)));
    energy_consumption = zeros(1, length(set_temp_range(1,:)));
    outside_temp = zeros(1, length(set_temp_range(1,:)));
    on_time = dt;
    
    %populate with initial condition
    energy(1) = U_0;
    energy_consumption(1) = (heat_state_0*heater_power*dt);
    outside_temp(1) = daily_temp_model(set_temp_range(2,1));
    
    %Eulers method
    for t=2:length(set_temp_range(1,:))
        
        time = set_temp_range(1,t);
        set_temp = set_temp_range(2,t);
        
        %evaluate ODE
        [dUdt, dHdt, temp_amb] = rate(time, energy(t-1));
        
        %update stocks
        energy(t) = energy(t-1) + (dt * dUdt);
        energy_consumption(t) = energy_consumption(t-1) + (dt * dHdt);
        
        if dHdt > 0
            on_time = on_time + dt;
        end
        
        %also save temp_amb for plotting
        outside_temp(t) = temp_amb;
    end
   
    %convert to energy
    temperature = energyToTemperature(energy, tot_mass, c_weighted);
    
    %rate function
    function [dUdt, dHdt, temp_amb] = rate(time, U)
        % calculate current temp
        current_house_temp = energyToTemperature(U, tot_mass, c_weighted);
        
        %find current heater statues
        
        heater_state = get_heater_state(current_house_temp, set_temp, heater_state);

        temp_amb = daily_temp_model(time);  %get temp based on model
        
        R_tot = 1 / ( (1/R_attic) + (1/R_wall));
        
        dHdt = (heater_state * heater_power);
        dUdt = dHdt - ((current_house_temp - temp_amb) / R_tot);
        
    end
end